services:
  kafka-gen:
    image: confluentinc/cp-kafka:7.9.0
    hostname: kafka-gen
    container_name: kafka-gen
    restart: "no"
    volumes:
      - ./scripts/create_cluster_id.sh:/tmp/create_cluster_id.sh
      - ./clusterID:/tmp/clusterID
    command: "bash -c '/tmp/create_cluster_id.sh'"

  cntrl1:
    image: confluentinc/cp-kafka:7.9.0
    restart: always
    hostname: cntrl1
    container_name: cntrl1
    environment:
        KAFKA_NODE_ID: 1
        KAFKA_PROCESS_ROLES: controller
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LISTENERS: CONTROLLER://cntrl1:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
        KAFKA_METADATA_LOG_DIR: /var/lib/kafka/data
        KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - cntrl1-logs:/data
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"

  cntrl2:
    image: confluentinc/cp-kafka:7.9.0
    restart: always
    hostname: cntrl2
    container_name: cntrl2
    environment:
        KAFKA_NODE_ID: 2
        KAFKA_PROCESS_ROLES: controller
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LISTENERS: CONTROLLER://cntrl2:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
        KAFKA_METADATA_LOG_DIR: /var/lib/kafka/data
        KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - cntrl2-logs:/data
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"

  cntrl3:
    image: confluentinc/cp-kafka:7.9.0
    restart: always
    hostname: cntrl3
    container_name: cntrl3
    environment:
        KAFKA_NODE_ID: 3
        KAFKA_PROCESS_ROLES: controller
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LISTENERS: CONTROLLER://cntrl3:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
        KAFKA_METADATA_LOG_DIR: /var/lib/kafka/data
        KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - cntrl3-logs:/data
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"

  kafka1:
    image: confluentinc/cp-kafka:7.9.0
    restart: always
    hostname: kafka1
    container_name: kafka1-kraft
    ports:
      - "19092:19092"
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
      KAFKA_LISTENERS: BROKER://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka1:9092,EXTERNAL://192.168.157.165:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - kafka1-data:/var/lib/kafka/data
      - ./jmx_exporter:/usr/app/jmx_exporter/
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"
    depends_on:
      - cntrl1
      - cntrl2
      - cntrl3

  kafka2:
    image: confluentinc/cp-kafka:7.9.0
    restart: always
    hostname: kafka2
    container_name: kafka2-kraft
    ports:
      - "19093:19093"
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
      KAFKA_LISTENERS: BROKER://0.0.0.0:9092,EXTERNAL://0.0.0.0:19093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka2:9092,EXTERNAL://192.168.157.165:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - kafka2-data:/var/lib/kafka/data
      - ./jmx_exporter:/usr/app/jmx_exporter/
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"
    depends_on:
      - cntrl1
      - cntrl2
      - cntrl3

  kafka3:
    image: confluentinc/cp-kafka:7.9.0
    restart: always
    hostname: kafka3
    container_name: kafka3-kraft
    ports:
      - "19094:19094"
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@cntrl1:9093,2@cntrl2:9093,3@cntrl3:9093
      KAFKA_LISTENERS: BROKER://0.0.0.0:9092,EXTERNAL://0.0.0.0:19094
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka3:9092,EXTERNAL://192.168.157.165:19094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/custom-log4j.properties"
    volumes:
      - kafka3-data:/var/lib/kafka/data
      - ./jmx_exporter:/usr/app/jmx_exporter/
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
      - ./kafka-config/log4j.properties:/etc/kafka/custom-log4j.properties
    command: "bash -c '/tmp/update_run.sh'"
    depends_on:
      - cntrl1
      - cntrl2
      - cntrl3

  akhq:
    image: tchiotludo/akhq:0.22.0
    restart: always
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka1:9092,kafka2:9092,kafka3:9092"
    ports:
      - 8180:8080
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  # Redis (用於快取和會話管理)
  redis:
    image: redis:7.4-alpine
    container_name: redis-kafka
    restart: always
    ports:
      - "6381:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kafdrop (Kafka UI 管理工具)
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    restart: always
    ports:
      - "9010:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:9092,kafka2:9092,kafka3:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      - kafka1
      - kafka2
      - kafka3

volumes:
  cntrl1-logs:
  cntrl2-logs:
  cntrl3-logs:
  kafka1-data:
  kafka2-data:
  kafka3-data:
  redis-data:

networks:
  default:
    name: multimedia-platform
